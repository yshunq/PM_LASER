C51 COMPILER V9.00   24CXX                                                                 08/28/2024 17:05:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 24CXX
OBJECT MODULE PLACED IN ..\hex\24cxx.obj
COMPILER INVOKED BY: C:\Keil _C51\C51\BIN\C51.EXE ..\user\24cxx.c LARGE BROWSE INCDIR(..\user;..\common;..\display) DEBU
                    -G OBJECTEXTEND PRINT(.\LIST\24cxx.lst) OBJECT(..\hex\24cxx.obj)

line level    source

   1          #include "24cxx.h"
   2          
   3          //--------------33177600L-----------//
   4          
   5          
   6          //产生IIC起始信号
   7          void IIC_Start(void)
   8          {
   9   1              //SDA_OUT();     //sda线输出
  10   1              IIC_SDA=1;                
  11   1              IIC_SCL=1;
  12   1              _nop_();_nop_();_nop_();_nop_();
  13   1              _nop_();_nop_();_nop_();_nop_();
  14   1              _nop_();_nop_();_nop_();_nop_();
  15   1              IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
  16   1              _nop_();_nop_();_nop_();_nop_();
  17   1              _nop_();_nop_();_nop_();_nop_();
  18   1              _nop_();_nop_();_nop_();_nop_();
  19   1              //IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
  20   1      }
  21          
  22          //产生IIC停止信号
  23          void IIC_Stop(void)
  24          {
  25   1              //SDA_OUT();//sda线输出
  26   1              IIC_SCL=1;
  27   1              IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
  28   1              _nop_();_nop_();_nop_();_nop_();
  29   1              _nop_();_nop_();_nop_();_nop_();
  30   1              _nop_();_nop_();_nop_();_nop_();
  31   1              IIC_SCL=1; 
  32   1              IIC_SDA=1;//发送I2C总线结束信号
  33   1              _nop_();_nop_();_nop_();_nop_();
  34   1              _nop_();_nop_();_nop_();_nop_();
  35   1              _nop_();_nop_();_nop_();_nop_();                                                        
  36   1      }       
  37          
  38          //IIC发送一个字节
  39          //返回从机有无应答
  40          //1，有应答
  41          //0，无应答                       
  42          void IIC_Send_Byte(u8 txd)
  43          {                        
  44   1              u8 t;   
  45   1              //SDA_OUT();        
  46   1              IIC_SCL=0;//拉低时钟开始数据传输
  47   1              for(t=0;t<8;t++){              
  48   2                      IIC_SDA=(txd&0x80)>>7;
  49   2                      txd<<=1;          
  50   2                      _nop_();_nop_();_nop_();
  51   2                      IIC_SCL=1;
  52   2                      _nop_();_nop_();_nop_();
  53   2                      IIC_SCL=0;      
  54   2                      _nop_();_nop_();_nop_();
C51 COMPILER V9.00   24CXX                                                                 08/28/2024 17:05:53 PAGE 2   

  55   2        }      
  56   1      } 
  57          
  58          //等待应答信号到来
  59          //返回值：1，接收应答失败
  60          //        0，接收应答成功
  61          u8 IIC_Wait_Ack(void)
  62          {
  63   1              u8 ucErrTime=0;
  64   1              //SDA_IN();      //SDA设置为输入  
  65   1              IIC_SDA=1;_nop_();_nop_();_nop_();_nop_();         
  66   1              IIC_SCL=1;_nop_();_nop_();_nop_();_nop_();
  67   1              while(IIC_SDA){
  68   2                      ucErrTime++;
  69   2                      if(ucErrTime>250){
  70   3                              IIC_Stop();
  71   3                              return 1;
  72   3                      }
  73   2              }
  74   1              IIC_SCL=0;//时钟输出0      
  75   1              return 0;  
  76   1      } 
  77          
  78          //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
  79          u8 IIC_Read_Byte(unsigned char ack)
  80          {
  81   1              unsigned char i,receive=0;
  82   1              //SDA_IN();//SDA设置为输入
  83   1              for(i=0;i<8;i++ ){
  84   2              IIC_SCL=0; 
  85   2              _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
  86   2                      IIC_SCL=1;
  87   2                      _nop_();_nop_();_nop_();_nop_();
  88   2              receive<<=1;
  89   2              if(IIC_SDA)receive++;   
  90   2                      _nop_();_nop_();_nop_();_nop_();_nop_(); 
  91   2          }                                    
  92   1          if (!ack)
  93   1              IIC_NAck();//发送nACK
  94   1          else
  95   1              IIC_Ack(); //发送ACK   
  96   1          return receive;
  97   1      }
  98          
  99          //产生ACK应答
 100          void IIC_Ack(void)
 101          {
 102   1              IIC_SCL=0;
 103   1              //SDA_OUT();
 104   1              IIC_SDA=0;
 105   1              _nop_();_nop_();_nop_();
 106   1              _nop_();_nop_();_nop_();
 107   1              _nop_();_nop_();_nop_();
 108   1              IIC_SCL=1;
 109   1              _nop_();_nop_();_nop_();
 110   1              _nop_();_nop_();_nop_();
 111   1              _nop_();_nop_();_nop_();
 112   1              IIC_SCL=0;
 113   1      }
 114          
 115          //不产生ACK应答             
 116          void IIC_NAck(void)
C51 COMPILER V9.00   24CXX                                                                 08/28/2024 17:05:53 PAGE 3   

 117          {
 118   1              IIC_SCL=0;
 119   1              //SDA_OUT();
 120   1              IIC_SDA=1;
 121   1              _nop_();_nop_();_nop_();
 122   1              _nop_();_nop_();_nop_();
 123   1              _nop_();_nop_();_nop_();
 124   1              IIC_SCL=1;
 125   1              _nop_();_nop_();_nop_();
 126   1              _nop_();_nop_();_nop_();
 127   1              _nop_();_nop_();_nop_();
 128   1              IIC_SCL=0;
 129   1      }       
 130          
 131          //在AT24CXX指定地址读出一个数据
 132          //ReadAddr:开始读数的地址  
 133          //返回值  :读到的数据
 134          u8 AT24CXX_ReadOneByte(u16 ReadAddr)
 135          {                                 
 136   1              u8 temp=0;                                                                                                                                                       
 137   1              IIC_Start();  
 138   1              if(EE_TYPE>AT24C16){
 139   2      //              IIC_Send_Byte(0xA0);       //发送写命令
 140   2      //              IIC_Wait_Ack();
 141   2      //              IIC_Send_Byte(ReadAddr>>8);//发送高地址
 142   2      //              IIC_Wait_Ack();          
 143   2              }else IIC_Send_Byte(0XA0+((ReadAddr/256)<<1));   //发送器件地址0XA0,写数据       
 144   1      
 145   1              IIC_Wait_Ack(); 
 146   1              IIC_Send_Byte(ReadAddr%256);   //发送低地址
 147   1              IIC_Wait_Ack();     
 148   1              IIC_Start();               
 149   1              IIC_Send_Byte(0XA1);           //进入接收模式                      
 150   1              IIC_Wait_Ack();  
 151   1              temp=IIC_Read_Byte(0);             
 152   1              IIC_Stop();//产生一个停止条件       
 153   1              return temp;
 154   1      }
 155          
 156          //在AT24CXX指定地址写入一个数据
 157          //WriteAddr  :写入数据的目的地址    
 158          //DataToWrite:要写入的数据
 159          void AT24CXX_WriteOneByte(u16 WriteAddr,u8 DataToWrite)
 160          {                                                                                                                                                                                
 161   1          IIC_Start();  
 162   1              if(EE_TYPE>AT24C16){
 163   2      //              IIC_Send_Byte(0xA0);        //发送写命令
 164   2      //              IIC_Wait_Ack();
 165   2      //              IIC_Send_Byte(WriteAddr>>8);//发送高地址
 166   2              }else{
 167   2                      IIC_Send_Byte(0XA0+((WriteAddr/256)<<1));   //发送器件地址0XA0,写数据 
 168   2              }        
 169   1              IIC_Wait_Ack();    
 170   1          IIC_Send_Byte(WriteAddr%256);   //发送低地址
 171   1              IIC_Wait_Ack();                                                                                                            
 172   1              IIC_Send_Byte(DataToWrite);     //发送字节                                                         
 173   1              IIC_Wait_Ack();                            
 174   1          IIC_Stop();//产生一个停止条件 
 175   1              delay_ms(10);    
 176   1      }
 177          
 178          
C51 COMPILER V9.00   24CXX                                                                 08/28/2024 17:05:53 PAGE 4   

 179          
 180          
 181          
 182          
 183          
 184          
 185          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    344    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
