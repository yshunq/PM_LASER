C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DIS_DIODE_LASER_WORK
OBJECT MODULE PLACED IN ..\hex\dis_diode_laser_work.obj
COMPILER INVOKED BY: C:\Keil _C51\C51\BIN\C51.EXE ..\display\dis_diode_laser_work.c LARGE BROWSE INCDIR(..\user;..\commo
                    -n) DEBUG OBJECTEXTEND PRINT(.\LIST\dis_diode_laser_work.lst) OBJECT(..\hex\dis_diode_laser_work.obj)

line level    source

   1          //#include "config.h"
   2          //
   3          //void dis_one_23x32_black(u8 dat,u16 x,u16 y)
   4          //{
   5          //      switch(dat){
   6          //              case 0: DIS_DEL_DIS(Pic_CUT1,  0,876,18,902,x,y);break;//0
   7          //              case 1: DIS_DEL_DIS(Pic_CUT1, 20,876, 38,902,x,y);break;//1
   8          //              case 2: DIS_DEL_DIS(Pic_CUT1, 40,876, 58,902,x,y);break;//2
   9          //              case 3: DIS_DEL_DIS(Pic_CUT1, 60,876, 78,902,x,y);break;//3
  10          //              case 4: DIS_DEL_DIS(Pic_CUT1, 80,876,98,902,x,y);break;//4
  11          //              case 5: DIS_DEL_DIS(Pic_CUT1,100,876,118,902,x,y);break;//5
  12          //              case 6: DIS_DEL_DIS(Pic_CUT1,120,876,138,902,x,y);break;//6
  13          //              case 7: DIS_DEL_DIS(Pic_CUT1,140,876,158,902,x,y);break;//7
  14          //              case 8: DIS_DEL_DIS(Pic_CUT1,160,876,178,902,x,y);break;//8
  15          //              case 9: DIS_DEL_DIS(Pic_CUT1,180,876,198,902,x,y);break;//9
  16          //              case 10:DIS_DEL_DIS(Pic_CUT1,200,876,218,902,x,y);break;//NOP
  17          //              case 11:DIS_DEL_DIS(Pic_CUT1,220,876,231,902,x,y);break;//-
  18          //              case 12:DIS_DEL_DIS(Pic_CUT1,233,876,240,902,x,y);break;//.
  19          //
  20          //      }
  21          //}
  22          //
  23          //void dis_one_23x32_red(u8 dat,u16 x,u16 y)
  24          //{
  25          //      switch(dat){
  26          //              case 0: DIS_DEL_DIS(Pic_CUT1,  0,848,18,874,x,y);break;//0
  27          //              case 1: DIS_DEL_DIS(Pic_CUT1, 20,848, 38,874,x,y);break;//1
  28          //              case 2: DIS_DEL_DIS(Pic_CUT1, 40,848, 58,874,x,y);break;//2
  29          //              case 3: DIS_DEL_DIS(Pic_CUT1, 60,848, 78,874,x,y);break;//3
  30          //              case 4: DIS_DEL_DIS(Pic_CUT1, 80,848,98,874,x,y);break;//4
  31          //              case 5: DIS_DEL_DIS(Pic_CUT1,100,848,118,874,x,y);break;//5
  32          //              case 6: DIS_DEL_DIS(Pic_CUT1,120,848,138,874,x,y);break;//6
  33          //              case 7: DIS_DEL_DIS(Pic_CUT1,140,848,158,874,x,y);break;//7
  34          //              case 8: DIS_DEL_DIS(Pic_CUT1,160,848,178,874,x,y);break;//8
  35          //              case 9: DIS_DEL_DIS(Pic_CUT1,180,848,198,874,x,y);break;//9
  36          //              case 10:DIS_DEL_DIS(Pic_CUT1,200,848,218,874,x,y);break;//NOP
  37          //              case 11:DIS_DEL_DIS(Pic_CUT1,220,848,231,874,x,y);break;//-
  38          //              case 12:DIS_DEL_DIS(Pic_CUT1,233,848,240,874,x,y);break;//.
  39          //      }
  40          //}
  41          //
  42          //void dis_one_42x63_black(u8 dat,u16 x,u16 y)
  43          //{
  44          //      switch(dat){
  45          //              case 0: DIS_DEL_DIS(Pic_CUT1,  0,939, 41,1001,x,y);break;//0
  46          //              case 1: DIS_DEL_DIS(Pic_CUT1, 43,939, 84,1001,x,y);break;//1
  47          //              case 2: DIS_DEL_DIS(Pic_CUT1, 86,939,127,1001,x,y);break;//2
  48          //              case 3: DIS_DEL_DIS(Pic_CUT1,129,939,170,1001,x,y);break;//3
  49          //              case 4: DIS_DEL_DIS(Pic_CUT1,172,939,213,1001,x,y);break;//4
  50          //              case 5: DIS_DEL_DIS(Pic_CUT1,215,939,256,1001,x,y);break;//5
  51          //              case 6: DIS_DEL_DIS(Pic_CUT1,258,939,299,1001,x,y);break;//6
  52          //              case 7: DIS_DEL_DIS(Pic_CUT1,301,939,342,1001,x,y);break;//7
  53          //              case 8: DIS_DEL_DIS(Pic_CUT1,344,939,385,1001,x,y);break;//8
  54          //              case 9: DIS_DEL_DIS(Pic_CUT1,387,939,427,1001,x,y);break;//9
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 2   

  55          //              case 10:DIS_DEL_DIS(Pic_CUT1,430,939,470,1001,x,y);break;//NOP
  56          //      }
  57          //}
  58          //
  59          //void dis_one_53x77_black(u8 dat,u16 x,u16 y)
  60          //{
  61          //      switch(dat){
  62          //              case 0: DIS_DEL_DIS(Pic_CUT1,  0,1003, 52,1079,x,y);break;//0
  63          //              case 1: DIS_DEL_DIS(Pic_CUT1, 54,1003,106,1079,x,y);break;//1
  64          //              case 2: DIS_DEL_DIS(Pic_CUT1,108,1003,160,1079,x,y);break;//2
  65          //              case 3: DIS_DEL_DIS(Pic_CUT1,162,1003,214,1079,x,y);break;//3
  66          //              case 4: DIS_DEL_DIS(Pic_CUT1,216,1003,268,1079,x,y);break;//4
  67          //              case 5: DIS_DEL_DIS(Pic_CUT1,270,1003,322,1079,x,y);break;//5
  68          //              case 6: DIS_DEL_DIS(Pic_CUT1,324,1003,376,1079,x,y);break;//6
  69          //              case 7: DIS_DEL_DIS(Pic_CUT1,378,1003,430,1079,x,y);break;//7
  70          //              case 8: DIS_DEL_DIS(Pic_CUT1,432,1003,484,1079,x,y);break;//8
  71          //              case 9: DIS_DEL_DIS(Pic_CUT1,486,1003,538,1079,x,y);break;//9
  72          //              case 10:DIS_DEL_DIS(Pic_CUT1,540,1003,592,1079,x,y);break;//NOP 
  73          //      }
  74          //}
  75          //
  76          //void dis_diode_laser_work_shots_total(u8 xian)
  77          //{
  78          //      static u32 last;
  79          //      u32 temp;
  80          //      u16 x,y,add;
  81          //      x = 1550;
  82          //      y = 280;
  83          //      add = 21;
  84          //      temp = RX_PROBE_TOTAL;
  85          //
  86          //      if(temp%10000000/1000000 != last%10000000/1000000 || xian == 0)dis_one_23x32_black(temp%10000000/100000
             -0,x,y);
  87          //      x += add;
  88          //      if(temp%1000000/100000 != last%1000000/100000 || xian == 0)dis_one_23x32_black(temp%1000000/100000,x,y)
             -;
  89          //      x += add;
  90          //      if(temp%100000/10000 != last%100000/10000 || xian == 0)dis_one_23x32_black(temp%100000/10000,x,y);
  91          //      x += add;
  92          //      if(temp%10000/1000 != last%10000/1000 || xian == 0)dis_one_23x32_black(temp%10000/1000,x,y);
  93          //      x += add;
  94          //      if(temp%1000/100 != last%1000/100 || xian == 0)dis_one_23x32_black(temp%1000/100,x,y);
  95          //      x += add;
  96          //      if(temp%100/10 != last%100/10 || xian == 0)dis_one_23x32_black(temp%100/10,x,y);
  97          //      x += add;
  98          //      if(temp%10 != last%10 || xian == 0)dis_one_23x32_black(temp%10,x,y);
  99          //      x += add;
 100          //    last = temp;
 101          //}
 102          //
 103          //void dis_diode_laser_work_handle_probe_cold_gear(void)
 104          //{
 105          //      switch(HANDLE_PROBE_COLE_GEAR){
 106          //              case 0: 
 107          //                      DIS_DEL_DIS(Pic_DIODE_LASER_WORK_DOWN,829,625,884,681,829,625);
 108          //                      DIS_DEL_DIS(Pic_NORMAL_DIODE_LASER_WORK,931,625,1088,681,931,625);
 109          //                      break;//0
 110          //              case 1: 
 111          //                      DIS_DEL_DIS(Pic_DIODE_LASER_WORK_DOWN,829,625,986,681,829,625);
 112          //                      DIS_DEL_DIS(Pic_NORMAL_DIODE_LASER_WORK,1032,625,1088,681,1032,625);
 113          //                      break;//1
 114          //              case 2: 
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 3   

 115          //                      DIS_DEL_DIS(Pic_DIODE_LASER_WORK_DOWN,829,625,1088,681,829,625);
 116          //                      break;//1
 117          //      }       
 118          //}
 119          //
 120          //void dis_diode_laser_work_power_gear(u8 xian)
 121          //{
 122          //      static u8 last = 0;
 123          //      u8 temp;
 124          //      u16 x,y,add;
 125          //      x = 1555;
 126          //      y = 700;
 127          //      add = 60;
 128          //      temp = POWER_GEAR;
 129          //
 130          //      if(last/10 != temp/10 || xian == 0)dis_one_53x77_black(temp/10,x,y);
 131          //      if(last%10 != temp%10 || xian == 0)dis_one_53x77_black(temp%10,x+add,y);
 132          //
 133          //      set_power_gear();
 134          //
 135          //      last = temp;
 136          //}
 137          //
 138          //void dis_diode_laser_work_fre_gear(void)
 139          //{
 140          //      u8 ge,shi;
 141          //      u16 x,y,add;
 142          //      x = 210;
 143          //      y = 700;
 144          //      add = 60;
 145          //      shi = FRE_GEAR%100/10;
 146          //      ge = FRE_GEAR%10;
 147          //      dis_one_53x77_black(shi,x,y);
 148          //      dis_one_53x77_black(ge,x+add,y);
 149          //
 150          //      //set_fre_gear();
 151          //}
 152          //
 153          //void dis_diode_laser_work_water_temp(u8 xian,u8 error)//xian 0 全部显示  error 0 白色  1黑色
 154          //{
 155          //      static u8 last = 0,dir = 0,lerror = 0;//last 为没有正负的数值
 156          //      u8 dirbuff,tempbuff,i,wei1,wei2,temp,add;
 157          //      u16 x,y;
 158          ////    x = 508;
 159          ////    y = 1213;
 160          ////    add = 23;
 161          //      x = 775;
 162          //      y = 790;
 163          //      add = 19;
 164          //      //判断正负，计算除符号之外的值
 165          //      if(WATER_TEMP < 10){
 166          //              dirbuff = 0;
 167          //              tempbuff = 10 - WATER_TEMP;
 168          //      }else{
 169          //              dirbuff = 1;
 170          //              tempbuff = WATER_TEMP - 10;
 171          //      }
 172          //
 173          //      //计算位数
 174          //      i = 0;
 175          //      temp = tempbuff;
 176          //      do{
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 4   

 177          //         i++;
 178          //         temp/=10;
 179          //      }while(temp>0);
 180          //      wei1 = i;
 181          //
 182          //      i = 0;
 183          //      temp = last;
 184          //      do{
 185          //         i++;
 186          //         temp/=10;
 187          //      }while(temp>0);
 188          //      wei2 = i;
 189          //
 190          //      if(dirbuff != dir || xian == 0 || wei1 != wei2 || lerror != error){//覆盖
 191          //              dis_one_23x32_black(10,x,y);
 192          //              dis_one_23x32_black(10,x+add,y);
 193          //              dis_one_23x32_black(10,x+add+add,y);
 194          //      }
 195          //
 196          //      if(dirbuff == 0){//负数
 197          //              if(wei1 == 2)x = x;
 198          //              else{x = add/2 + x;}    
 199          //      }else{//正数
 200          //              if(wei1 == 3){//报错
 201          //                      dis_one_23x32_red(WATER_TEMP/100,x,y);
 202          //                      dis_one_23x32_red(WATER_TEMP%100/10,x+add,y);
 203          //                      dis_one_23x32_red(WATER_TEMP%10,x+add+add,y);
 204          //                      dir = dirbuff;
 205          //                      last = tempbuff;
 206          //                      return;
 207          //              }else if(wei1 == 2){
 208          //                      x = add/2 + x;
 209          //              }else{
 210          //                      x = add + x;
 211          //              }
 212          //      }
 213          //
 214          //      if(dirbuff != dir || xian == 0 || wei1 != wei2 || lerror != error){
 215          //              if(dirbuff == 0){
 216          //                      if(error == 0)dis_one_23x32_black(11,x,y);
 217          //                      else{dis_one_23x32_red(11,x,y);}
 218          //              }
 219          //      }
 220          //      if(dirbuff == 0)x = add + x;
 221          //
 222          //      if(wei1 >= 2){
 223          //              if((last/10) != (tempbuff/10) || xian == 0 || wei1 != wei2 || dirbuff != dir || lerror != error){
 224          //                      if(error == 0)dis_one_23x32_black(tempbuff/10,x,y);
 225          //                      else{dis_one_23x32_red(tempbuff/10,x,y);}
 226          //              }
 227          //              x = add + x;
 228          //      }
 229          //
 230          //      if((last%10) != (tempbuff%10) || xian == 0 || wei1 != wei2 || dirbuff != dir || lerror != error){
 231          //              if(error == 0)dis_one_23x32_black(tempbuff%10,x,y);
 232          //              else{dis_one_23x32_red(tempbuff%10,x,y);}
 233          //      }
 234          //      dir = dirbuff;
 235          //      last = tempbuff;
 236          //      lerror = error;
 237          //}
 238          //
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 5   

 239          //void dis_diode_laser_work_handle_temp(u8 xian,u8 error)
 240          //{
 241          //      static u8 last = 0,dir = 0,lerror = 0;//last 为没有正负的数值
 242          //      u8 dirbuff,tempbuff,i,wei1,wei2,temp,add;
 243          //      u16 x,y;
 244          ////    x = 508;
 245          ////    y = 1399;
 246          ////    add = 23;
 247          //      x = 1105;
 248          //      y = 790;
 249          //      add = 19;
 250          //      //判断正负，计算除符号之外的值
 251          //      if(HANDLE_PROBE_TEMP < 10){
 252          //              dirbuff = 0;
 253          //              tempbuff = 10 - HANDLE_PROBE_TEMP;
 254          //      }else{
 255          //              dirbuff = 1;
 256          //              tempbuff = HANDLE_PROBE_TEMP - 10;
 257          //      }
 258          //
 259          //      //计算位数
 260          //      i = 0;
 261          //      temp = tempbuff;
 262          //      do{
 263          //         i++;
 264          //         temp/=10;
 265          //      }while(temp>0);
 266          //      wei1 = i;
 267          //
 268          //      i = 0;
 269          //      temp = last;
 270          //      do{
 271          //         i++;
 272          //         temp/=10;
 273          //      }while(temp>0);
 274          //      wei2 = i;
 275          //
 276          //      if(dirbuff != dir || xian == 0 || wei1 != wei2 || lerror != error){//覆盖
 277          //              dis_one_23x32_black(10,x,y);
 278          //              dis_one_23x32_black(10,x+add,y);
 279          //              dis_one_23x32_black(10,x+add+add,y);
 280          //      }
 281          //
 282          //      if(dirbuff == 0){//负数
 283          //              if(wei1 == 2)x = x;
 284          //              else{x = add/2 + x;}    
 285          //      }else{//正数
 286          //              if(wei1 == 3){//报错
 287          //                      dis_one_23x32_red(HANDLE_PROBE_TEMP/100,x,y);
 288          //                      dis_one_23x32_red(HANDLE_PROBE_TEMP%100/10,x+add,y);
 289          //                      dis_one_23x32_red(HANDLE_PROBE_TEMP%10,x+add+add,y);
 290          //                      dir = dirbuff;
 291          //                      last = tempbuff;
 292          //                      set_handle_temp(error);
 293          //                      return;
 294          //              }else if(wei1 == 2){
 295          //                      x = add/2 + x;
 296          //              }else{
 297          //                      x = add + x;
 298          //              }
 299          //      }
 300          //
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 6   

 301          //      if(dirbuff != dir || xian == 0 || wei1 != wei2 || lerror != error){
 302          //              if(dirbuff == 0){
 303          //                      if(error == 0)dis_one_23x32_black(11,x,y);
 304          //                      else{dis_one_23x32_red(11,x,y);}
 305          //              }
 306          //      }
 307          //      if(dirbuff == 0)x = add + x;
 308          //
 309          //      if(wei1 >= 2){
 310          //              if((last/10) != (tempbuff/10) || xian == 0 || wei1 != wei2 || dirbuff != dir || lerror != error){
 311          //                      if(error == 0)dis_one_23x32_black(tempbuff/10,x,y);
 312          //                      else{dis_one_23x32_red(tempbuff/10,x,y);}
 313          //              }
 314          //              x = add + x;
 315          //      }
 316          //
 317          //      if((last%10) != (tempbuff%10) || xian == 0 || wei1 != wei2 || dirbuff != dir || lerror != error){
 318          //              if(error == 0)dis_one_23x32_black(tempbuff%10,x,y);
 319          //              else{dis_one_23x32_red(tempbuff%10,x,y);}
 320          //      }
 321          //      set_handle_temp(error);
 322          //      dir = dirbuff;
 323          //      last = tempbuff;
 324          //      lerror = error;
 325          //}
 326          //
 327          //void dis_diode_laser_work_flow_rate(u8 xian,u8 error)
 328          //{
 329          //      static u16 last = 0;
 330          //      static u8 lerror = 0;
 331          //      u16 x,y,temp;
 332          //      x = 935;
 333          //      y = 790;
 334          //      temp = FLOW_RATE;
 335          //      
 336          //      if(temp/10 != last/10 || xian == 0 || lerror != error){
 337          //              if(error == 0)dis_one_23x32_black(temp/10,x,y);
 338          //              else{dis_one_23x32_red(temp/10,x,y);}
 339          //      }
 340          //
 341          //      if(xian == 0 || lerror != error){
 342          //              if(error == 0)dis_one_23x32_black(12,x+19,y);
 343          //              else{dis_one_23x32_red(12,x+19,y);}
 344          //      }
 345          //
 346          //      if(temp%10 != last%10 || xian == 0 || lerror != error){
 347          //              if(error == 0)dis_one_23x32_black(temp%10,x+19+8,y);
 348          //              else{dis_one_23x32_red(temp%10,x+19+8,y);}
 349          //      }
 350          //      last = temp;
 351          //      lerror = error;
 352          //}
 353          //
 354          //void dis_diode_laser_work_pulse_time(void)
 355          //{
 356          //      u8 ge,shi,bai;
 357          //      u16 x,y,add;
 358          //      x = 890;
 359          //      y = 280;
 360          //      add = 49;
 361          //      bai = PULSE_TIME/100;
 362          //      shi = PULSE_TIME%100/10;
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 7   

 363          //      ge = PULSE_TIME%10;
 364          //      dis_one_42x63_black(bai,x,y);
 365          //      dis_one_42x63_black(shi,x+add,y);
 366          //      dis_one_42x63_black(ge,x+add+add,y);
 367          //}
 368          //
 369          //void cut_diode_laser_work_start_stop_flag(u8 pic)
 370          //{
 371          //      if(START_STOP_FLAG == 0)DIS_DEL_DIS(Pic_DIODE_LASER_WORK_DOWN,844,895,1075,7043,844,895);
 372          //      else{DIS_DEL_DIS(pic,844,895,1075,7043,844,895);}
 373          //      set_lcd_stop_start_pic();
 374          //}
 375          //
 376          //void dis_diode_laser_work_body_part(void)
 377          //{
 378          //      if(SEX_SELECTION == WOMEN){
 379          //      if(PART_SELECTION == 0) DIS_DEL_DIS(Pic_CUT2,802,0,1201,356,761,149);
 380          //              else if(PART_SELECTION == 1)    DIS_DEL_DIS(Pic_CUT2,802,358,1201,714,761,149);
 381          //              else if(PART_SELECTION == 2)    DIS_DEL_DIS(Pic_CUT2,802,716,1201,1072,761,149);
 382          //              else if(PART_SELECTION == 3)    DIS_DEL_DIS(Pic_CUT2,1203,0,1602,356,761,149);
 383          //              else if(PART_SELECTION == 4)    DIS_DEL_DIS(Pic_CUT2,1203,358,1602,714,761,149);
 384          //              else if(PART_SELECTION == 5)    DIS_DEL_DIS(Pic_CUT2,1203,716,1602,1072,761,149);
 385          //
 386          //      }
 387          //      else{
 388          //              
 389          //              if(PART_SELECTION == 0) DIS_DEL_DIS(Pic_CUT2,0,0,399,356,761,149);
 390          //              else if(PART_SELECTION == 1)    DIS_DEL_DIS(Pic_CUT2,0,358,399,714,761,149);
 391          //              else if(PART_SELECTION == 2)    DIS_DEL_DIS(Pic_CUT2,0,716,399,1072,761,149);
 392          //              else if(PART_SELECTION == 3)    DIS_DEL_DIS(Pic_CUT2,401,0,800,356,761,149);
 393          //              else if(PART_SELECTION == 4)    DIS_DEL_DIS(Pic_CUT2,401,358,800,714,761,149);
 394          //              else if(PART_SELECTION == 5)    DIS_DEL_DIS(Pic_CUT2,401,716,800,1072,761,149);
 395          //      }
 396          //}
 397          //
 398          //void cut_diode_laser_work_rx_probe_mode(void)
 399          //{
 400          //      if(RX_PROBE_MODE == 1)DIS_DEL_DIS(Pic_CUT1,0,0,441,355,78,110);
 401          //      else if(RX_PROBE_MODE == 2)DIS_DEL_DIS(Pic_CUT1,443,0,884,355,78,110);
 402          //      else if(RX_PROBE_MODE == 3)DIS_DEL_DIS(Pic_CUT1,886,0,1327,355,78,110);
 403          //      else if(RX_PROBE_MODE == 4)DIS_DEL_DIS(Pic_CUT1,1329,0,1770,355,78,110);
 404          //      else{DIS_DEL_DIS(Pic_CUT1,0,357,441,708,78,110);}       
 405          //}
 406          //
 407          //
 408          //
 409          //
 410          //
 411          //
 412          //
 413          //
 414          //
 415          //
 416          //
 417          //
 418          //
 419          //
 420          //
 421          //
 422          //
 423          //
 424          //
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 8   

 425          //
 426          //
 427          //
 428          //
 429          //
 430          //
 431          //
 432          //
 433          //
 434          //
 435          //
 436          //
 437          //
 438          //
 439          //
 440          //
 441          //
 442          //
 443          //
 444          //
 445          ////void dis_one_23x32_black(u8 dat,u16 x,u16 y)
 446          ////{
 447          ////    switch(dat){
 448          ////            case 0: DIS_DEL_DIS(Pic_CUT1,  0,142, 22,173,x,y);break;//0
 449          ////            case 1: DIS_DEL_DIS(Pic_CUT1, 24,142, 46,173,x,y);break;//1
 450          ////            case 2: DIS_DEL_DIS(Pic_CUT1, 48,142, 70,173,x,y);break;//2
 451          ////            case 3: DIS_DEL_DIS(Pic_CUT1, 72,142, 94,173,x,y);break;//3
 452          ////            case 4: DIS_DEL_DIS(Pic_CUT1, 96,142,118,173,x,y);break;//4
 453          ////            case 5: DIS_DEL_DIS(Pic_CUT1,120,142,142,173,x,y);break;//5
 454          ////            case 6: DIS_DEL_DIS(Pic_CUT1,144,142,166,173,x,y);break;//6
 455          ////            case 7: DIS_DEL_DIS(Pic_CUT1,168,142,190,173,x,y);break;//7
 456          ////            case 8: DIS_DEL_DIS(Pic_CUT1,192,142,214,173,x,y);break;//8
 457          ////            case 9: DIS_DEL_DIS(Pic_CUT1,216,142,238,173,x,y);break;//9
 458          ////            case 10:DIS_DEL_DIS(Pic_CUT1,240,142,262,173,x,y);break;//NOP
 459          ////            case 11:DIS_DEL_DIS(Pic_CUT1,264,142,286,173,x,y);break;//-
 460          ////            case 12:DIS_DEL_DIS(Pic_CUT1,288,142,293,173,x,y);break;//.
 461          ////
 462          ////    }
 463          ////}
 464          ////
 465          ////void dis_one_23x32_red(u8 dat,u16 x,u16 y)
 466          ////{
 467          ////    switch(dat){
 468          ////            case 0: DIS_DEL_DIS(Pic_CUT1,  0,175, 22,206,x,y);break;//0
 469          ////            case 1: DIS_DEL_DIS(Pic_CUT1, 24,175, 46,206,x,y);break;//1
 470          ////            case 2: DIS_DEL_DIS(Pic_CUT1, 48,175, 70,206,x,y);break;//2
 471          ////            case 3: DIS_DEL_DIS(Pic_CUT1, 72,175, 94,206,x,y);break;//3
 472          ////            case 4: DIS_DEL_DIS(Pic_CUT1, 96,175,118,206,x,y);break;//4
 473          ////            case 5: DIS_DEL_DIS(Pic_CUT1,120,175,142,206,x,y);break;//5
 474          ////            case 6: DIS_DEL_DIS(Pic_CUT1,144,175,166,206,x,y);break;//6
 475          ////            case 7: DIS_DEL_DIS(Pic_CUT1,168,175,190,206,x,y);break;//7
 476          ////            case 8: DIS_DEL_DIS(Pic_CUT1,192,175,214,206,x,y);break;//8
 477          ////            case 9: DIS_DEL_DIS(Pic_CUT1,216,175,238,206,x,y);break;//9
 478          ////            case 10:DIS_DEL_DIS(Pic_CUT1,240,175,262,206,x,y);break;//NOP
 479          ////            case 11:DIS_DEL_DIS(Pic_CUT1,264,175,286,206,x,y);break;//-
 480          ////            case 12:DIS_DEL_DIS(Pic_CUT1,288,175,293,206,x,y);break;//.
 481          ////    }
 482          ////}
 483          //
 484          //
 485          //
 486          //
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 9   

 487          ///*
 488          //void dis_value_cut_mode(u16 x,u16 y,u8 duiqi,u32 value,u8 wei,u8 space)//wei最大为7
 489          //{
 490          //      u8 xian[7],i;
 491          //      u16 xs;
 492          //      u32 temp;
 493          //      xian[0] = (u8)(value%10);
 494          //      xian[1] = (u8)((value/10)%10);
 495          //      xian[2] = (u8)((value/100)%10);
 496          //      xian[3] = (u8)((value/1000)%10);
 497          //      xian[4] = (u8)((value/10000)%10);
 498          //      xian[5] = (u8)((value/100000)%10);
 499          //      xian[6] = (u8)((value/1000000)%10);
 500          //      
 501          //      temp = value;
 502          //      do{
 503          //         i++;
 504          //         temp/=10;
 505          //      }while(temp>0);
 506          //      if(i > wei)i = wei;
 507          //      if(duiqi == 0)xs = x;//左对齐
 508          //      else if(duiqi == 1)xs = (wei - i)*(space/2)+x;//居中
 509          //      else{xs = (wei - i)*space+x;}//右对齐
 510          //      do{
 511          //              i--;
 512          //              dis_one_23x32_black(xian[i],xs,y);
 513          //              xs = xs + space;
 514          //              _nop_();
 515          //              _nop_();
 516          //      }while(i>0);    
 517          //}
 518          //*/
 519          //
 520          //
 521          //
 522          //
 523          //
 524          //
 525          //
 526          //
 527          //
 528          //
 529          //
 530          //
 531          //
 532          //
 533          //
 534          //
 535          //
 536          //
 537          //
 538          //
 539          //
 540          //
 541          //
 542          //
 543          //
 544          //
 545          //
 546          //
 547          //
 548          //
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 10  

 549          //
 550          //
 551          //
 552          //
 553          //
 554          //
 555          //
 556          //
 557          //
 558          //
 559          //
 560          //
 561          //
 562          //
 563          //
 564          //
 565          //
 566          //
 567          //
 568          //
 569          //
 570          //
 571          //
 572          //
 573          // 
 574          // 
 575          // 
 576          // 
 577          // 
 578          // 
 579          // 
 580          // 
 581          // 
 582          // 
 583          // 
 584          // 
 585          // 
 586          // 
 587          // 
 588          // 
 589          // 
 590          // 
 591          // 
 592          // 
 593          // 
 594          // 
 595          // 
 596          // 
 597          // 
 598          // 
 599          // 
 600          // 
 601          // 
 602          // 
 603          // 
 604          // 
 605          // 
 606          // 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
C51 COMPILER V9.00   DIS_DIODE_LASER_WORK                                                  08/12/2024 15:03:58 PAGE 11  

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
